{"ast":null,"code":"/*!\n * Number-To-Words util\n * @version v1.2.4\n * @link https://github.com/marlun78/number-to-words\n * @author Martin Eneqvist (https://github.com/marlun78)\n * @contributors Aleksey Pilyugin (https://github.com/pilyugin),Jeremiah Hall (https://github.com/jeremiahrhall),Adriano Melo (https://github.com/adrianomelo),dmrzn (https://github.com/dmrzn)\n * @license MIT\n */\n!function () {\n  \"use strict\";\n\n  var e = \"object\" == typeof self && self.self === self && self || \"object\" == typeof global && global.global === global && global || this,\n      t = 9007199254740991;\n\n  function f(e) {\n    return !(\"number\" != typeof e || e != e || e === 1 / 0 || e === -1 / 0);\n  }\n\n  function l(e) {\n    return \"number\" == typeof e && Math.abs(e) <= t;\n  }\n\n  var n = /(hundred|thousand|(m|b|tr|quadr)illion)$/,\n      r = /teen$/,\n      o = /y$/,\n      i = /(zero|one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve)$/,\n      s = {\n    zero: \"zeroth\",\n    one: \"first\",\n    two: \"second\",\n    three: \"third\",\n    four: \"fourth\",\n    five: \"fifth\",\n    six: \"sixth\",\n    seven: \"seventh\",\n    eight: \"eighth\",\n    nine: \"ninth\",\n    ten: \"tenth\",\n    eleven: \"eleventh\",\n    twelve: \"twelfth\"\n  };\n\n  function h(e) {\n    return n.test(e) || r.test(e) ? e + \"th\" : o.test(e) ? e.replace(o, \"ieth\") : i.test(e) ? e.replace(i, a) : e;\n  }\n\n  function a(e, t) {\n    return s[t];\n  }\n\n  var u = 10,\n      d = 100,\n      p = 1e3,\n      v = 1e6,\n      b = 1e9,\n      y = 1e12,\n      c = 1e15,\n      g = 9007199254740992,\n      m = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\"],\n      w = [\"zero\", \"ten\", \"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\"];\n\n  function x(e, t) {\n    var n,\n        r = parseInt(e, 10);\n    if (!f(r)) throw new TypeError(\"Not a finite number: \" + e + \" (\" + typeof e + \")\");\n    if (!l(r)) throw new RangeError(\"Input is not a safe number, it’s either too large or too small.\");\n    return n = function e(t) {\n      var n,\n          r,\n          o = arguments[1];\n      if (0 === t) return o ? o.join(\" \").replace(/,$/, \"\") : \"zero\";\n      o || (o = []);\n      t < 0 && (o.push(\"minus\"), t = Math.abs(t));\n      t < 20 ? (n = 0, r = m[t]) : t < d ? (n = t % u, r = w[Math.floor(t / u)], n && (r += \"-\" + m[n], n = 0)) : t < p ? (n = t % d, r = e(Math.floor(t / d)) + \" hundred\") : t < v ? (n = t % p, r = e(Math.floor(t / p)) + \" thousand,\") : t < b ? (n = t % v, r = e(Math.floor(t / v)) + \" million,\") : t < y ? (n = t % b, r = e(Math.floor(t / b)) + \" billion,\") : t < c ? (n = t % y, r = e(Math.floor(t / y)) + \" trillion,\") : t <= g && (n = t % c, r = e(Math.floor(t / c)) + \" quadrillion,\");\n      o.push(r);\n      return e(n, o);\n    }(r), t ? h(n) : n;\n  }\n\n  var M = {\n    toOrdinal: function (e) {\n      var t = parseInt(e, 10);\n      if (!f(t)) throw new TypeError(\"Not a finite number: \" + e + \" (\" + typeof e + \")\");\n      if (!l(t)) throw new RangeError(\"Input is not a safe number, it’s either too large or too small.\");\n      var n = String(t),\n          r = Math.abs(t % 100),\n          o = 11 <= r && r <= 13,\n          i = n.charAt(n.length - 1);\n      return n + (o ? \"th\" : \"1\" === i ? \"st\" : \"2\" === i ? \"nd\" : \"3\" === i ? \"rd\" : \"th\");\n    },\n    toWords: x,\n    toWordsOrdinal: function (e) {\n      return h(x(e));\n    }\n  };\n  \"undefined\" != typeof exports ? (\"undefined\" != typeof module && module.exports && (exports = module.exports = M), exports.numberToWords = M) : e.numberToWords = M;\n}();","map":null,"metadata":{},"sourceType":"script"}